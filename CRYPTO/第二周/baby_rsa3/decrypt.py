from gmpy2 import iroot
from Crypto.Util.number import inverse, long_to_bytes, getPrime, bytes_to_long


n = 17924627889140388398983332171363599966763875275272819365196102226914051184309649938727760074250145880596228552400295249460218567808706574820244958704613044476423383831552541321191899849477812515944426085705273953604208102442843710743771536317767670088549278369514337511083661024226024035554673909
e = 3
c = 9135057423128006228407443551178480639178184737626027041973155396691147524219991144893196135576922639775438548370477054885495729616057847433625869086346650362441972580898446749812256751321572250975744021125202952388699024658482175846906780559491696834761250942511084541044968902566784921796291224
i = 0
while 1:
    res = iroot(c+i*n,3)
    if(res[1] == True):
        print(res[0])
        break
    i = i+1
print(long_to_bytes(res[0]))