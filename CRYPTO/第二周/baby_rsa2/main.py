from Crypto.Util.number import inverse, long_to_bytes, getPrime, bytes_to_long
import hashlib
def md5(byte):
    _md5 = hashlib.md5(byte)
    return _md5.hexdigest()

p = getPrime(1024)
q = getPrime(1024)

n = p*q
e = 0x10001

d = inverse(e,(p-1)*(q-1))


print('n:',n)
print('e:',e)
print('d:',d)
'''
n = 24036530563275757823622827623020359562551177626904015466871881547642525143925019117969489878352474785220633521203327418531836955371321110704985418376746368331390974731910303947228060678083240200421761535978967358478317609431714197115393612487637033355206353161417144984538895200997064479817975781816740917580581965976539219770718772292797113925932389986827329780466899729670515661062811961034758284977118261430490726797024462222269508495264902776790226635275740312533187951687455128007857078588246836164231790731868213187154090982548225212985023585752789039522520559205115276296964682505913674405183112845943699467751
e = 65537
d = 6934750139469582509560407475106717710739241444825077810208180665926497481137895562545846081143302153576632110394319465791842366177288242690539150261188646602834132630894914735709418668861832334552614051944555210249294739752122496285424453742408731352979869777012609325536131200092352338135683447252558665633272398503713858286598100852262974138122452016832782760642748261965779645888315596942937209814553834128403342358356473580337477895887157038255703805354844635623124425420598590806324725293361400052681827153110526294286376964458182478406202681865337182720435331632826391854674632602465862598013642966574064222721
'''
#flag = md5(long_to_bytes(pow(p,q,n)))

#flag{xxx}